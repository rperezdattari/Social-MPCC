<?xml version="1.0"?>

<launch>
    <!-- Debug Info -->
    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
    <arg name="debug_config_parameter" default="false"/>
    <arg name="debug_kinematic_cal" default="false"/>
    <arg name="debug_collision_detection" default="false"/>
    <arg name="bags_directory" value="/home/amr/coachmpc/bags"/>
	<arg name="spawn_point" default="10.0,0.0,0.5,0.0,0.0,0.0"/>
	<arg name="vehicle_filter" default="model3"/>
	<arg name="town" default="Town01"/>

	<!-- Should carla wait for its sensors etc. -->
	<arg name="synchronous_mode" default="true"/>
	<!-- Own code: Should carla run in real-time -->
	<arg name="realtime" default="true"/>
	<!-- If false the car control may be delayed, if true there are some issues with ackermann control initially -->
	<arg name="synchronous_mode_wait_for_vehicle_control_command" default="false"/>
	<!-- The time step of the simulation -->
  	<arg name='fixed_delta_seconds' default='0.1'/>

    <rosparam command="load" file="$(find lmpcc)/config/predictive_config_parameter.yaml"/>
    <rosparam command="load" file="$(find lmpcc)/config/carla_topics.yaml"/>
    <rosparam command="load" file="$(find lmpcc)/config/path.yaml"/>

    <node pkg="lmpcc" type="lmpcc_node" name="lmpcc_node" cwd="node" respawn="false" output="screen"/>

    <!-- launch vehicle -->
    <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge_with_example_ego_vehicle.launch">
        <arg name="spawn_point" value="$(arg spawn_point)" />
        <arg name="town" value="$(arg town)" />
        <arg name="vehicle_filter" default='model*'/>
        <arg name="synchronous_mode_wait_for_vehicle_control_command" value='$(arg synchronous_mode_wait_for_vehicle_control_command)'/>
        <arg name="fixed_delta_seconds" value='$(arg fixed_delta_seconds)'/>
        <arg name="realtime" value='$(arg realtime)'/>
    </include>
    
    <include file="$(find carla_waypoint_publisher)/launch/carla_waypoint_publisher.launch"/>

    <!-- configured rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find lmpcc)/rviz_config/rviz_config.rviz" />
   

    <arg name="model" default="$(find prius_description)/urdf/prius.urdf"/>
    <param name="robot_description" textfile="$(arg model)"/>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
      <!-- <remap from="robot_description" to="different_robot_description" /> -->
      <!-- <remap from="joint_states" to="/prius/joint_states" /> -->
    </node>
    <node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom" args="-1.3 0 0 0 0 0 ego_vehicle base_link"/>

    <node pkg="joy" type="joy_node" name="joy"/>

    <!-- Loading the scenario with pedestrians -->
    <rosparam command="load" file="$(find lmpcc)/scripts/scenarios/straight_road.yaml"/>

	<node pkg="lmpcc" name="carla_scene" type="simulation_manager_node.py" output="screen"/>

	<!-- node pkg="rosbag" type="record" name="bag_recorder" args="record -a -o $(arg bags_directory)/mpc_coach"/ -->

	<node pkg="lmpcc" name="display" type="display.py" output="screen"/>

    <node name="rqt_reconfig" pkg="rqt_reconfigure" type="rqt_reconfigure"/>

    
</launch>
